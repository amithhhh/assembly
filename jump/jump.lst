     1                                  ; jump.asm
     2                                  
     3                                  extern printf
     4                                  
     5                                  section .data
     6 00000000 2A00000000000000        	number1 dq 42
     7 00000008 2900000000000000        	number2 dq 41
     8 00000010 4E554D42455231203E-     	fmt1 db "NUMBER1 >= NUMBER2",10,0
     8 00000019 3D204E554D42455232-
     8 00000022 0A00               
     9 00000024 4E554D42455231203C-     	fmt2 db "NUMBER1 < NUMBER2",10,0
     9 0000002D 204E554D424552320A-
     9 00000036 00                 
    10                                  
    11                                  section .bss
    12                                  section .text
    13                                  	global main
    14                                  
    15                                  main:
    16 00000000 55                      	push rbp
    17 00000001 4889E5                  	mov rbp, rsp
    18 00000004 488B0425[00000000]      	mov rax, [number1]		;move number1 to rax
    19 0000000C 488B1C25[08000000]      	mov rbx, [number2]		;move number2 to rbx
    20 00000014 4839D8                  	cmp rax, rbx
    21 00000017 7D16                    	jge greater			;jump to greater when rax  >= rbx
    22                                  	
    23                                  	;if rax < rbx we continue here
    24                                  	
    25 00000019 48BF-                   	mov rdi, fmt2
    25 0000001B [2400000000000000] 
    26 00000023 B800000000              	mov rax, 0			;no xmm register involved
    27 00000028 E8(00000000)            	call printf
    28 0000002D EB14                    	jmp exit
    29                                  
    30                                  greater:
    31 0000002F 48BF-                   	mov rdi, fmt1
    31 00000031 [1000000000000000] 
    32 00000039 B800000000              	mov rax, 0
    33 0000003E E8(00000000)            	call printf
    34                                  
    35                                  exit:
    36 00000043 4889EC                  	mov rsp, rbp
    37 00000046 5D                      	pop rbp
